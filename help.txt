 Core Functions
TCP Port Scanner - Help Guide
Overview
The TCP Port Scanner is a command-line tool designed to scan a target host for open TCP ports. It performs a simple yet effective scan to identify open ports and provide feedback on the status of each port. The tool is designed to be lightweight and user-friendly while offering enough flexibility for users to customize their scanning preferences.

Features:
TCP Scan: The scanner uses TCP SYN scan (stealth scan) for checking open ports.

Scan Input: Easily input the target IP or hostname and specify which ports to scan.

Port Ranges: Support for custom port ranges or scanning all ports.

User-friendly interface: No complex arguments required. Simply follow the prompts for input.

Results: Provides detailed feedback on open and closed ports.

Usage
Running the Scanner:
To run the tool, simply execute the script without any arguments. You will be prompted to input the target IP/hostname and other options.

Scan Target:

When prompted, input the target IP address or hostname to be scanned.

Example: 192.168.1.1 or example.com

Port Selection:

You will be prompted to enter a comma-separated list of ports to scan (e.g., 80,443,8080).

Leave the input blank and press Enter to scan all ports (1-65535).

You can also specify port ranges (e.g., 1-1000).

Scan Confirmation:

The script will ask if you want to proceed with the scan. Type yes to start scanning or no to return to the main menu.

View Results:

Once the scan is complete, the tool will display the open ports along with any closed or filtered ports.

Main Menu Options
Go to Main Menu: Returns to the main menu where you can choose to start a new scan, configure settings, or exit.

Help: Displays this help guide.

Exit: Exits the tool.

Example Walkthrough:
Step 1: Start the Tool
$ python tcp_port_scanner.py

Step 2: Input Target
Enter the target IP/hostname (e.g., 192.168.1.1 or example.com): 192.168.1.1

Step 3: Input Ports (Leave blank for all ports)
Enter the ports to scan (e.g., 80,443 or 1-1000) [leave blank for all]: 22,80,443

Step 4: Confirm Scan
Are you sure you want to scan the specified ports on 192.168.1.1? (yes/no): yes

Step 5: Results
[*] Scan Results for 192.168.1.1:
- Open Ports: 22, 80
- Closed Ports: 443

>>Troubleshooting

Network Unreachable: If you encounter network issues, ensure that the target IP/hostname is accessible and there are no network restrictions (e.g., firewalls blocking ICMP or SYN packets).

Permission Issues: Some scans (e.g., SYN scan) may require root/admin privileges. Try running the script with elevated permissions if necessary.

Timeouts: If scans are taking too long, you can increase or decrease the timeout value in the script to speed up or slow down the process.

>>License
This tool is open-source and available for free use. Modify or extend the script as needed to suit your needs.